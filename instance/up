#!/bin/bash

# Pull in variables from .env
source .env

if [ "$PHILA_INSTANCE" ]; then
  echo "Existing reference found: PHILA_INSTANCE=$PHILA_INSTANCE"
  read -p "Spin up new instance and replace reference? (Enter \"y\" to proceed.) " ref_replace
  [ ! "$ref_replace" = "y" ] && exit 0
fi

# Easy reference for directory containing script
dir=`dirname "$0"`

user_data="file://$dir/user-data.sh"
[ "$PHILA_ENV" = "prod" ] && user_data="file://$dir/user-data-prod.sh"

echo "Provisioning instance."
export PHILA_INSTANCE=`aws ec2 run-instances --user-data $user_data --key-name $KEY_PAIR_NAME \
--instance-type t2.micro --associate-public-ip-address --image-id $AMI --subnet-id $SUBNET | \
grep '^INSTANCES' | cut -f8`

echo "Setting PHILA_INSTANCE in .env."
ed -s .env <<EOF
g/PHILA_INSTANCE/s/=.*/=$PHILA_INSTANCE
w
EOF

echo "Waiting for instance $PHILA_INSTANCE to come online. This may take a few minutes."
while true; do
  sleep 5
  echo -n "."
  reachability=`aws ec2 describe-instance-status --instance-id=$PHILA_INSTANCE | grep reachability | head -n1 | cut -f3`
  [ "$reachability" = "passed" ] && break
done
echo

echo "Setting up ssh access for $PHILA_INSTANCE."
ip=`aws ec2 describe-instances --instance-id=$PHILA_INSTANCE | grep '^INSTANCES' | cut -f15`

ssh-keyscan $ip >> .ssh/known_hosts 2> /dev/null

cat >> .ssh/config <<EOF
Host $PHILA_INSTANCE
    User ubuntu
    HostName $ip
    IdentityFile .ssh/$KEY_PAIR_NAME.pem
    UserKnownHostsFile .ssh/known_hosts
EOF

domain=`aws ec2 describe-instances --instance-id=$PHILA_INSTANCE | grep '^INSTANCES' | cut -f14`
echo "Run instance/sync to begin syncing and deploying to https://$domain."

echo "Setting instance environment variables."
ssh -F .ssh/config $PHILA_INSTANCE "cat > .ssh/environment" <<EOF
APP_ROOT=/home/ubuntu/phila.gov
WP_SITEURL=$WP_SITEURL
WP_HOME=$WP_HOME
EOF
